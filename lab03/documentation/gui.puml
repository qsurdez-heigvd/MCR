@startuml

' STATIC
' Generated by CTP - https://github.com/samuelroland/ctp

' Style
!theme plain
hide empty members
hide circle
skinparam classAttributeIconSize 0
skinparam linetype ortho

' Additions

' REMOVE

' ENDSTATIC

class SoldierRenderer {
	- {static} sprite: Sprite
	+ display(g: Graphics2D, d: Displayable): void
	+ getSize(): int
	+ {static} getInstance(): SoldierRenderer
}


class SoldierRenderer$Instance {
	~ {static} instance: SoldierRenderer
}

class SettingsSelectorPanel {
	- gathererField: JTextField
	- scoutField: JTextField
	- soldierField: JTextField
	+ getGathererCount(): int
	+ getScoutCount(): int
	+ getSoldierCount(): int
	- addLabelAndField(labelText: String, textField: JTextField): void
}


class GathererRenderer {
	- {static} sprite: Sprite
	+ display(g: Graphics2D, d: Displayable): void
	+ getSize(): int
	+ {static} getInstance(): GathererRenderer
}


class GathererRenderer$Instance {
	~ {static} instance: GathererRenderer
}

class ColonyRenderer {
	+ display(g: Graphics2D, d: Displayable): void
	+ getSize(): int
	+ {static} getInstance(): ColonyRenderer
}

class ColonyRenderer$Instance {
	~ {static} instance: ColonyRenderer
}

class ScoutRenderer {
	- {static} sprite: Sprite
	+ display(g: Graphics2D, d: Displayable): void
	+ getSize(): int
	+ {static} getInstance(): ScoutRenderer
}


class ScoutRenderer$Instance {
	~ {static} instance: ScoutRenderer
}

class ControlPanel {
	- colorBlindModeButton: JButton
}

class InformationFrame {
	- scoutsLabel: JLabel
	- soldiersLabel: JLabel
	- gatherersLabel: JLabel
	- predatorsLabel: JLabel
	- createAndSetupLabel(): JLabel
	- updateLabels(): void
	+ display(): void
}


interface Renderer {
	~ {static} ANT_SPRITE_SIZE: int
	~ {static} SPIDER_SPRITE_SIZE: int
	~ {static} COLONY_SIZE: int
	~ {static} RESOURCE_SIZE: int
	~ {static} FONT_SIZE: int
	~ display(g: Graphics2D, d: Displayable): void
	~ getCenteredOvalPosition(x: int, y: int, ovalWidth: int, ovalHeight: int): Vector2
	~ printCenteredText(g: Graphics2D, text: String, x: int, y: int): void
	~ getSize(): int
}


class ResourceRenderer {
	+ display(g: Graphics2D, d: Displayable): void
	+ getSize(): int
	+ {static} getInstance(): ResourceRenderer
}

class ResourceRenderer$Instance {
	~ {static} instance: ResourceRenderer
}

class Sprite {
	- image: Image
	- width: int
	- height: int
	+ getImage(): Image
	+ getWidth(): int
	+ getHeight(): int
}


class SpiderRenderer {
	- {static} sprite: Sprite
	+ display(g: Graphics2D, d: Displayable): void
	+ getSize(): int
	+ {static} getInstance(): SpiderRenderer
}


class SpiderRenderer$Instance {
	~ {static} instance: SpiderRenderer
}

class TitleScreenPanel {
	- backgroundImage: Image
	- image: Image
	- settingsSelectorPanel: SettingsSelectorPanel
	- getTitleLabel(): JLabel
	- getStartButton(jFrame: JFrame, simulationPanel: JPanel, \n\t controlPanel: JPanel): JButton
	# paintComponent(g: Graphics): void
}


class SimulationDisplayer {
	+ {static} INITIAL_WIDTH: int
	+ {static} INITIAL_HEIGHT: int
	- jFrame: JFrame
	- image: Image
	- backgroundImage: Image
	- {static} makeImageTranslucent(image: Image, alpha: float): Image
	+ {static} getInstance(): SimulationDisplayer
	+ getWidth(): int
	+ getHeight(): int
	+ getGraphics(): Graphics2D
	+ repaint(): void
	+ setTitle(title: String): void
}


class SimulationDisplayer$Instance {
	~ {static} instance: SimulationDisplayer
}

interface Displayer {
	~ getWidth(): int
	~ getHeight(): int
	~ getGraphics(): Graphics2D
	~ repaint(): void
	~ setTitle(title: String): void
}



Renderer <|.. SoldierRenderer
SoldierRenderer +-- SoldierRenderer$Instance
JPanel <|-- SettingsSelectorPanel
Renderer <|.. GathererRenderer
GathererRenderer +-- GathererRenderer$Instance
Renderer <|.. ColonyRenderer
ColonyRenderer +-- ColonyRenderer$Instance
Renderer <|.. ScoutRenderer
ScoutRenderer +-- ScoutRenderer$Instance
JPanel <|-- ControlPanel
JFrame <|-- InformationFrame
Renderer <|.. ResourceRenderer
ResourceRenderer +-- ResourceRenderer$Instance
JFrame <|-- Sprite
Renderer <|.. SpiderRenderer
SpiderRenderer +-- SpiderRenderer$Instance
JPanel <|-- TitleScreenPanel
Displayer <|.. SimulationDisplayer
SimulationDisplayer +-- SimulationDisplayer$Instance

Sprite "1" --* "1" SoldierRenderer : sprite
Sprite "1" --* "1" GathererRenderer : sprite
Sprite "1" --* "1" ScoutRenderer : sprite
Sprite "1" --* "1" SpiderRenderer : sprite

@enduml
